_printf(3)				Manual				_printf(3)

NAME
		_printf - formatted output conversion

SYNOPSIS
		#include <stdarg.h>
		#include "main.h"

		int _printf(const char *format, ...);

DESCRIPTION
		The _printf() function writes output to the stdio, standard 
		output stream, according to the format specifiers inside the 
		format string. The subsequent arguments are converted under 
		the control of the format string and its format specifiers. 

		This function write the output under the control of a 
		format string that specifies how subsequent arguments (or 
		arguments accessed via the variable-length argument facilities of 
		stdarg(3)) are converted for output.

	Format of the format string
		The format string is a character string, beginning and ending in
		its initial shift state, if any.  The format string is composed
		of zero or more directives: ordinary characters (not %), which
		are copied unchanged to the output stream; and conversion
		specifications, each of which results in fetching zero or more
		subsequent arguments.  Each conversion specification is
		introduced by the character %, and ends with a conversion
		specifier.

		This  _printf function takes no flags and cannot handle field 
		width, precision or length modifiers. The number of arguments 
		following the format string must be equal or greater than the 
		number of format specifiers in the format string.

	Conversion specifiers
		A character that specifies the type of conversion to be applied.
		The conversion specifiers and their meanings are:
		%c      prints a char or character
       		%s	prints a char * or pointer to an array of chars.
			The array must contain a terminating null byte
			(‘\0’), and the null byte is not included in the
			_printf output.
       		%i	prints an int or integer
       		%d	prints a decimal number in base-10

RETURN VALUE
		Upon successful return, this function return the number of
		characters printed (excluding the null byte used to end output to
		strings).

		If an output error is encountered, -1 is returned.

ATTRIBUTES
		Attributes are not implemented in this version of _printf.

BUGS
		There are no bugs in the context of this exercise. This function
		passess all checkers as intended.

EXAMPLES:
		To print "String:[I am a string!]":

			_printf("String:[%s]\n", "I am a string !");

		To print INT_MAX(accessed via <limits.h>):

			_printf("%d", INT_MAX);

SEE ALSO:
		man printf(3)

AUTHOR
		To contact the authors of this page and to review the _printf 
		code or submit pull requests, please visit:
			https://github.com/haoningng
			https://github.com/DrFrankLi

COPYRIGHT
		This printf was created for educational purposes under the 
		framework and guidance of Holberton School, Melbourne Australia.

2023-11-23								_printf(3)
